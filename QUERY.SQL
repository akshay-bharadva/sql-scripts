--FOR CHANGING DATATYPE
ALTER TABLE [TABLENAME] 
	ALTER [COLNAME] [DATATYPE]

--FOR ADDING COLUMN
ALTER TABLE [TABLENAME]   
	ADD [COLNAME] [DATATYPE]

--FOR DROP COLUMN
ALTER TABLE [TABLENAME] 
	DROP [COLNAME] [DATATYPE]

--TO DELETE ROW
DELETE FROM [TABLENAME] 
	WHERE [COLNAME] = [VALUE]

--TO UPDATE DATA
UPDATE [TABLENAME] 
	SET [COLNAME] = [VALUE] 
	WHERE [COLNAME] = [VALUE]

--TO INSERT DATA
INSERT INTO [TABLENAME] 
 	VALUES([VALUE1],[VALUE2],[VALUE3],.....)

 --TO DROP TABLE
DROP TABLE [TABLENAME]
 
-- TO COPY TABLE DATA FROM ONE TABLE TO ANOTHER TABLE
 INSERT INTO [TABLENAME WHERE WE WANT TO COPY DATA]
	(VALUES1, VALUES2, VALUES3 ,......)
 	FROM [TABLENAME FROM WHERE WE WANT TO COPY]

-- TO EXTRACT DATA BETWEEN RANGE
SELECT * FROM [TABLENAME] 
	WHERE [COLNAME] 
	BETWEEN [VALUE1] AND [VALUE2]

-- TO EXTRACT DATA FROM OPTIONS VALUES [i.e, {OR}]
SELECT * FROM [TABLENAME] 
	WHERE [COLNAME]
	IN (VALUE1, VALUE2, VALUE3 ,......)

-- TO EXTRACT DATA FROM STRING VALUES
SELECT * FROM [TABLENAME] 
	WHERE [COLNAME]
	LIKE '_C%' {OR}
	     'CC%' {OR}
	     'C_C%' {OR}
	     '____' {OR}
	     '____%' [etc,]

-- TO CREATE TABLE 
CREATE TABLE [TABLENAME](
	COLNAME1 DATATYPE,
	COLNAME2 DATATYPE,
	COLNAME3 DATATYPE,
	COLNAME4 DATATYPE,
			 .
			 .
)

-- TO COPY FROM ONE TABLE TO ANOTHER 
INSEERT INTO [TO WHERE WE HAVE TO COPY](COL1, COL2, COL3,...)
SELECT *{OR}(COL1,COL2,COL3,...)
FROM [TO FROM WE HSVE TO COPY]

--TO EXTRACT DATA B/N RANGE
SELECT * FROM [TABLENAME]
WHERE [COLNAME ] BETWEEN [VALUE1] AND [ VALUE2]

--TO EXTRACT DATA FROM VALUES(INTEGER)
SELECT * FROM [TABLENAME]
WHERE [COLNAME] IN (VALUE1,VALUE2,VALUE3,....)


--TO EXTRACT DATA FROM STRING VALUES
SELECT * FROM[TABLENAME]
WHERE (COLNAME)
LIKE '_C%' {OR} 'CC%' {OR} 'C_C' {OR} '_C_c%'

--TO SORTING DATA
SELECT * FROM [TABLENAME]
ORDER BY (COLNAME) DESC
	{OR}
	BY DEFAULT ASC 

-- GROUP BY DATA
SELECT [COLNAME] SUM([COLNAME]) AS "ALIASE NAME" FROM [TABLENAME] 
		 GROPU BY [TABLENAME] HAVING SUM([COLNAME]) [OPTERATOR i.e, >,<,=,etc.. CONDITION] [VALUES] 
	--WE CAN USE MAX,MIN,AVG,COUNT ETC.. BEHALF OF SUM.....

--SUB QUERY(RESULT OF ONE TABLE TO ANOTHER TABLE)
SELECT * FROM [TABLENAME] WHERE [COLNAME] [OPTERATOR i.e, >,<,=,etc.. CONDITION] /*NOW SUB QUERY IS START*/ (SELECT * {OR} [COLNAME] FROM [TABLENAME] WHERE [COLNAME] LIKE "EXAMPLE AKSHAY"

--SUB QUERY(RESULT OF ONE TABLE TO ANOTHER TABLE {OR} QUERY CONTAIN ANOTHER QUERY )
SELECT * FROM [TABLENAME] WHERE [COLNAME] NOT IN 
	(SELECT * {OR} [COLNAME] FROM {TABLENAME] WHERE [COLNAME] IN
		(SELECT [COLNAME] FROM [TABLENAME]
		)
	)

--CREATE TABLE WITH FOREIGN KEY
CREATE TABLE [TABLENAME]
	(
		[COLNAME] [DATATYPE] [PRIMARY KEY],
		[COLNAME] [DATATYPE],
		FOREIGN KEY ([COLNAME])
			REFERENCES [TABLENAME]([COLNAME])
	)

--GIVING FK AFTER CREATING TABLE
ALTER TABLE [TABLENAME]
	ADDD CONSTRAINT [CONSTRAINT NAME] --IF WE CAN'T GIVE CONSTRAINT NAME DBMS GIVE ITSELF A UNIQUE NAME AND IT'S ALSO USED TO IDENTIFY A ERROR THAT IN WHICH CONSTRAINT THERE IS ERROR 
	FOREIGN KEY ([COLNAME])
	REFERENCES [TABLENAME]([COLNAME]

-- SOME STATESTICAL FUNCTION
SELECT SUM([COLNAME])
	AS COLNAMEFROM [TABLENAME]

SELECT AVG([COLNAME])
	AS COLNAMEFROM [TABLENAME]

SELECT MIN([COLNAME])
	AS COLNAMEFROM [TABLENAME]

SELECT MAX([COLNAME])
	AS COLNAMEFROM [TABLENAME]

SELECT COUNT([COLNAME]) -- GIVES NOTNUKK RECORD COUNTING VALUE
	AS COLNAMEFROM [TABLENAME]

SELECT COUNT(*)
	AS COLNAMEFROM [TABLENAME]

CREATE TABLE BCUSTOMER(
	ID INTEGER,
	NAME VARCHAR(30),
	DOB DATETIME,
	ACCOUNT_NO INTEGER,
	BALANCE INTEGER
)

INSERT INTO BCUSTOMER VALUES (1,'AKSHAY','2002-03-19',123456,100000)
INSERT INTO BCUSTOMER VALUES (2,'CHIRAG','2001-02-25',654321,1000000)
INSERT INTO BCUSTOMER VALUES (3,'VENTESH','2019-12-24',456789,200000)
INSERT INTO BCUSTOMER VALUES (4,'MIHIR','2020-01-01',987654,2000000)
INSERT INTO BCUSTOMER VALUES (5,'HAGRID','2005-07-14',123789,300000)
INSERT INTO BCUSTOMER VALUES (6,'RUBIOUS','2005-04-31',987321,3000000)
INSERT INTO BCUSTOMER VALUES (7,'HARMINI','1960-02-29',741852,400000)
INSERT INTO BCUSTOMER VALUES (8,'ANANYA','1994-01-01',258147,4000000)

CREATE TABLE BAMOUNT(
	ID INTEGER,
	ACCOUNT_NO INTEGER,
	BALANCE INTEGER,
	"DATE" DATE,
	DEPOSIT INTEGER,
	WITHDRAW INTEGER
)

INSERT INTO BAMOUNT (ID,ACCOUNT_NO,BALANCE,DATE,DEPOSIT)
VALUES (1,123456,100000,'2019-12-12',5000)
INSERT INTO BAMOUNT (ID,ACCOUNT_NO,BALANCE,DATE,WITHDRAW)
VALUES (2,654321,1000000,'2018-12-31',900)
INSERT INTO BAMOUNT (ID,ACCOUNT_NO,BALANCE,DATE,WITHDRAW)
VALUES (7,741852,400000,'2019-01-12',7800)
INSERT INTO BAMOUNT (ID,ACCOUNT_NO,BALANCE,DATE,DEPOSIT)
VALUES (8,258147,40000	00,'2019-12-30',9500)
INSERT INTO BAMOUNT (ID,ACCOUNT_NO,BALANCE,DATE,DEPOSIT)
VALUES (3,456789,200000,'2019-08-09',2050)
INSERT INTO BAMOUNT (ID,ACCOUNT_NO,BALANCE,DATE,WITHDRAW)
VALUES (4,987654,2000000,'2018-02-25',560)
INSERT INTO BAMOUNT (ID,ACCOUNT_NO,BALANCE,DATE,DEPOSIT)
VALUES (5,123789,300000,'2019-03-19',4580)
INSERT INTO BAMOUNT (ID,ACCOUNT_NO,BALANCE,DATE,WITHDRAW)
VALUES (4,987654,2000000,'2018-12-03',7840)


CREATE TABLE ORDERMASTER(
	ORDER_NO INTEGER,
	PROD_NO INTEGER,
	QTY INTEGER,
	DISCOUNT INTEGER,
	ORDER_DATE DATETIME,
	GST INTEGER,
	PAYMENT_TYPE VARCHAR(30),
	TOTAL_AMOUNT DOUBLE,
	PRIMARY KEY (ORDER_NO)
)

firebird_sdbc error:
*Dynamic SQL Error
*SQL error code = -104
*Token unknown - line 1, column 13
*FROM
caused by
'isc_dsql_prepare'
